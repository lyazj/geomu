#!/usr/bin/env python3

import os
import csv
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

reader = csv.reader(open('../data/Bartol_pm14.tsv'), delimiter='\t')

# Fetch cos_theta values.
for line in reader:
    cos_theta = np.array(line[1::2], dtype='float')
    break
energy = []
density_p14 = []
density_m14 = []
for line in reader:
    # Fetch energy value.
    energy.append(line[0])
    # Fetch muon and anti-muon neutrino densities.
    density_p14.append(line[1::2])
    density_m14.append(line[2::2])
energy, density_p14, density_m14 = map(lambda x: np.array(x, dtype='float'), (energy, density_p14, density_m14))
log_energy = np.log(energy)
cos_theta = cos_theta[::-1]
density_p14 = density_p14[:,::-1]
density_m14 = density_m14[:,::-1]

data = np.array([r.split() for r in os.popen('./generator-test').read().strip().split('\n')], dtype='float')
data[:,0] = np.log(data[:,0])

plt.hist(data[:,2], 50)
plt.xlabel(r'Weight [cm$^{-2}$s$^{-1}$]')
plt.ylabel(r'Events')
plt.tight_layout()
plt.savefig('generator-weight.pdf')

cos_theta = np.linspace(cos_theta[0], cos_theta[-1], 51)
log_energy = np.linspace(log_energy[0], log_energy[8], 51)
plt.clf()
hst, _, _, _ = plt.hist2d(data[:,1], data[:,0], (cos_theta, log_energy), weights=data[:,2] * (data[:,3] == 0) / data.shape[0], norm=mpl.colors.LogNorm())
plt.xlabel(r'$\cos\theta$')
plt.ylabel(r'$\log(E_\nu/$GeV$)$')
plt.colorbar()
plt.tight_layout()
plt.savefig('generator-histogram.pdf')

log_energy = (log_energy[1:] + log_energy[:-1]) / 2.0
cos_theta = (cos_theta[1:] + cos_theta[:-1]) / 2.0
plt.clf()
plt.contourf(*np.meshgrid(cos_theta, log_energy), hst.T, locator=ticker.LogitLocator())
plt.xlabel(r'$\cos\theta$')
plt.ylabel(r'$\log(E_\nu/$GeV$)$')
plt.colorbar()
plt.tight_layout()
plt.savefig('generator-contourf.pdf')
